service: leap-faucet

custom:
  serverless-offline:
    port: 3001
  sqs: faucet-requests-${opt:stage}
  table: faucet-${opt:stage}
  region: eu-west-1

provider:
  name: aws
  region: eu-west-1
  runtime: nodejs8.10
  timeout: 30
  iamRoleStatements:
    - Effect: Allow
      Action:
       - ssm:GetParameters
       - ssm:GetParameter
      Resource: "arn:aws:ssm:*:*:parameter/faucet/${opt:stage}/*"
    - Effect: Allow
      Action:
        - sqs:DeleteMessage
        - sqs:ReceiveMessage
        - sqs:SendMessage
        - sqs:GetQueueAttributes
      Resource: arn:aws:sqs:*:*:${self:custom.sqs}
    - Effect: Allow
      Action:
       - sdb:GetAttributes
       - sdb:PutAttributes
      Resource: 
        Fn::Join:
          - ""
          - - "arn:aws:sdb:*:*:domain/"
            - Ref: faucetDb

functions:
  queueRequests:
    timeout: 3
    handler: src/queueRequests.handler
    name: faucet-${opt:stage}-queueRequests
    environment:
      TW_CONSUMER_KEY: ${ssm:/faucet/TW_CONSUMER_KEY}
      TW_CONSUMER_SECRET: ${ssm:/faucet/TW_CONSUMER_SECRET}
      TW_ACCESS_TOKEN_KEY: ${ssm:/faucet/TW_ACCESS_TOKEN_KEY}
      TW_ACCESS_TOKEN_SECRET: ${ssm:/faucet/TW_ACCESS_TOKEN_SECRET}
      REGION: ${self:custom.region}
      QUEUE_NAME: ${self:custom.sqs}
      TABLE_NAME:
        Ref: faucetDb
    events:
      - http:
          method: post
          path: /
          cors: true
  dispenseTokens:
    timeout: 5
    handler: src/dispenseTokens.handler
    name: faucet-${opt:stage}-dispenseTokens
    reservedConcurrency: 1
    environment:
      SENDER_ADDR: ${env:SENDER_ADDR}
      PRIV_KEY: ${env:PRIV_KEY}
      AMOUNT: ${env:AMOUNT}
      PROVIDER_URL: ${env:PROVIDER_URL}
    events:
      - sqs: 
          arn:
            Fn::GetAtt:
            - faucetRequests
            - Arn

plugins:
  - serverless-offline

resources:
  Resources:
    faucetRequests:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.sqs}
        MessageRetentionPeriod: 1209600
        VisibilityTimeout: 60
    faucetDb:
      Type: "AWS::SDB::Domain"
      Properties:
        DomainName : ${self:custom.table}
        Description: "SDB Domain to store metadata"